knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE, strip.white = FALSE, echo = TRUE)
knitr::opts_chunk$set(error = TRUE)
url$query <- list(service = "wfs",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "woonplaats = 'Hoek van Holland'",
outputFormat = "application/json",
resultType = "results",
count = server_limit,
sortBy = "bag:identificatie")
adresses <- lapply(seq(0, hits, server_limit), function(x) {
url$query$startIndex <- x
build_url(url) %>% st_read(stringsAsFactors = F)
}) %>% do.call(rbind, .)
nrow(adresses)
url$query <- list(service = "wfs",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "woonplaats = 'Hoek van Holland'",
outputFormat = "application/json",
resultType = "results",
count = maxRecordCount,
sortBy = "bag:identificatie")
adresses <- lapply(seq(0, hits, server_limit), function(x) {
url$query$startIndex <- x
build_url(url) %>% st_read(stringsAsFactors = F)
}) %>% do.call(rbind, .)
nrow(adresses)
library(xml2)
url <- list(hostname = "geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs",
scheme = "http",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- paste0("//ows:Operation[@name='GetFeature']",
"/ows:Parameter[@name='outputFormat']",
"/ows:AllowedValues/ows:Value")
output_formats <- doc %>% xml_find_all(xpath)
output_formats
library(xml2)
library(httr)
url <- list(hostname = "geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs",
scheme = "http",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- paste0("//ows:Operation[@name='GetFeature']",
"/ows:Parameter[@name='outputFormat']",
"/ows:AllowedValues/ows:Value")
output_formats <- doc %>% xml_find_all(xpath)
output_formats
library(xml2)
library(httr)
library(magrittr)
url <- list(hostname = "geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs",
scheme = "http",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- paste0("//ows:Operation[@name='GetFeature']",
"/ows:Parameter[@name='outputFormat']",
"/ows:AllowedValues/ows:Value")
output_formats <- doc %>% xml_find_all(xpath)
output_formats
library(magrittr)
library(httr)
library(data.table)
library(xml2)
url <- list(hostname = "geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs",
scheme = "http",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- paste0("//ows:Operation[@name='GetFeature']",
"/ows:Parameter[@name='outputFormat']",
"/ows:AllowedValues/ows:Value")
output_formats <- doc %>% xml_find_all(xpath)
output_formats
library(magrittr)
library(httr)
library(data.table)
library(xml2)
url <- list(hostname = "geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs",
scheme = "http",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- paste0("//ows:Operation[@name='GetFeature']",
"/ows:Parameter[@name='outputFormat']",
"/ows:AllowedValues/ows:Value")
output_formats <- doc %>% xml_find_all(xpath)
output_formats
library(magrittr)
library(httr)
library(data.table)
library(xml2)
url <- list(hostname = "geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs",
scheme = "http",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- paste0("//ows:Operation[@name='GetFeature']",
"/ows:Parameter[@name='outputFormat']",
"/ows:AllowedValues/ows:Value")
output_formats <- doc %>% xml_find_all(xpath) %>% unlist()
output_formats
library(magrittr)
library(httr)
library(data.table)
library(xml2)
url <- list(hostname = "geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs",
scheme = "http",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- paste0("//ows:Operation[@name='GetFeature']",
"/ows:Parameter[@name='outputFormat']",
"/ows:AllowedValues/ows:Value")
output_formats <- doc %>% xml_find_all(xpath) %>% xml_text()
output_formats
library(magrittr)
library(httr)
library(data.table)
library(xml2)
url <- list(hostname = "geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs",
scheme = "https",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- paste0("//ows:Operation[@name='GetFeature']",
"/ows:Parameter[@name='outputFormat']",
"/ows:AllowedValues/ows:Value")
output_formats <- doc %>% xml_find_all(xpath) %>% xml_text()
output_formats
xpath  <- "//wfs:FeatureType/wfs:Name"
feature_types  <- doc %>% xml_find_all(xpath) %>% xml_text()
head(feature_types)
xpath <- "//ows:Constraint[@name='CountDefault']/ows:DefaultValue"
maxRecordCount <- doc %>% xml_find_one(xpath) %>% xml_integer()
maxRecordCount
xpath <- "//ows:Constraint[@name='CountDefault']/ows:DefaultValue"
maxRecordCount <- doc %>% xml_find_first(xpath) %>% xml_integer()
maxRecordCount
format(maxRecordCount, big.mark = ",")
url$query = list(service = "WFS",
version = "2.0.0",
request = "GetFeature",
typename = "cbsgebiedsindelingen:cbs_arbeidsmarktregio_2014_gegeneraliseerd",
resultType = "hits") %>%
setattr("class","url")
request <- build_url(url)
doc <- doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureCollection/@numberMatched"
hits <- doc %>% xml_find_first(xpath) %>% as.integer()
hits
url$query = list(service = "WFS",
version = "2.0.0",
request = "GetFeature",
typename = "cbsgebiedsindelingen:cbs_arbeidsmarktregio_2014_gegeneraliseerd",
resultType = "hits") %>%
setattr("class","url")
request <- build_url(url)
doc <- doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureCollection/@numberMatched"
hits <- doc %>% xml_find_first(xpath) %>% xml_integer()
hits
url$query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities") %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureType/wfs:Name"
feature_types <- doc %>% xml_find_all(xpath) %>% xml_text()
feature_types
xpath <- "//ows:Constraint[@name='CountDefault']/ows:DefaultValue"
maxRecordCount <- doc %>% xml_find_first(xpath) %>% xml_integer()
maxRecordCount
url$query = list(service = "WFS",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "bag:woonplaats='Hoek van Holland'",
resultType = "hits") %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureCollection/@numberMatched"
hits <- doc %>% xml_find_one(xpath) %>% xml_integer()
hits
url <- list(hostname = "geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs",
scheme = "https",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureType/wfs:Name"
feature_types <- doc %>% xml_find_all(xpath) %>% xml_text()
feature_types
xpath <- "//ows:Constraint[@name='CountDefault']/ows:DefaultValue"
maxRecordCount <- doc %>% xml_find_first(xpath) %>% xml_integer()
maxRecordCount
url$query = list(service = "WFS",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "bag:woonplaats='Hoek van Holland'",
resultType = "hits") %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureCollection/@numberMatched"
hits <- doc %>% xml_find_one(xpath) %>% xml_integer()
hits
url <- list(hostname = "geodata.nationaalgeoregister.nl/bag/wfs",
scheme = "https",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureType/wfs:Name"
feature_types <- doc %>% xml_find_all(xpath) %>% xml_text()
feature_types
xpath <- "//ows:Constraint[@name='CountDefault']/ows:DefaultValue"
maxRecordCount <- doc %>% xml_find_first(xpath) %>% xml_integer()
maxRecordCount
url$query = list(service = "WFS",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "bag:woonplaats='Hoek van Holland'",
resultType = "hits") %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureCollection/@numberMatched"
hits <- doc %>% xml_find_one(xpath) %>% xml_integer()
hits
url <- list(hostname = "geodata.nationaalgeoregister.nl/bag/wfs",
scheme = "https",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureType/wfs:Name"
feature_types <- doc %>% xml_find_all(xpath) %>% xml_text()
feature_types
xpath <- "//ows:Constraint[@name='CountDefault']/ows:DefaultValue"
maxRecordCount <- doc %>% xml_find_first(xpath) %>% xml_integer()
maxRecordCount
url$query = list(service = "WFS",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "bag:woonplaats='Hoek van Holland'",
resultType = "hits") %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureCollection/@numberMatched"
hits <- doc %>% xml_find_first(xpath) %>% xml_integer()
hits
url$query <- list(service = "wfs",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "woonplaats = 'Hoek van Holland'",
outputFormat = "application/json",
resultType = "results",
count = maxRecordCount,
sortBy = "bag:identificatie")
adresses <- lapply(seq(0, hits, maxRecordCount), function(x) {
url$query$startIndex <- x
build_url(url) %>% st_read(stringsAsFactors = F)
}) %>% do.call(rbind, .)
nrow(adresses)
library(sf)
url$query <- list(service = "wfs",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "woonplaats = 'Hoek van Holland'",
outputFormat = "application/json",
resultType = "results",
count = maxRecordCount,
sortBy = "bag:identificatie")
adresses <- lapply(seq(0, hits, maxRecordCount), function(x) {
url$query$startIndex <- x
build_url(url) %>% st_read(stringsAsFactors = F)
}) %>% do.call(rbind, .)
nrow(adresses)
library(sf)
url$query <- list(service = "wfs",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "woonplaats='Hoek van Holland'",
outputFormat = "application/json",
resultType = "results",
count = maxRecordCount,
sortBy = "bag:identificatie")
adresses <- lapply(seq(0, hits, maxRecordCount), function(x) {
url$query$startIndex <- x
build_url(url) %>% st_read(stringsAsFactors = FALSE)
}) %>% do.call(rbind, .)
nrow(adresses)
library(sf)
url$query <- list(service = "wfs",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "woonplaats='Hoek van Holland'",
outputFormat = "application/json",
resultType = "results",
count = maxRecordCount,
sortBy = "bag:identificatie")
requestAdresses <- function(x) {
url$query$startIndex <- x
request <- build_url(url)
st_read(request, stringsAsFactors = FALSE)
}
adresses <- lapply(seq(0, hits, maxRecordCount), requestAdresses()) %>% do.call(rbind, .)
url <- list(hostname = "geodata.nationaalgeoregister.nl/bag/wfs",
scheme = "https",
query = list(service = "WFS",
version = "2.0.0",
request = "GetCapabilities")) %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureType/wfs:Name"
feature_types <- doc %>% xml_find_all(xpath) %>% xml_text()
feature_types
xpath <- "//ows:Constraint[@name='CountDefault']/ows:DefaultValue"
maxRecordCount <- doc %>% xml_find_first(xpath) %>% xml_integer()
maxRecordCount
url$query = list(service = "WFS",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "bag:woonplaats='Hoek van Holland'",
resultType = "hits") %>%
setattr("class","url")
request <- build_url(url)
doc <- GET(request) %>% content(as = "text", encoding="UTF-8") %>% read_xml()
xpath <- "//wfs:FeatureCollection/@numberMatched"
hits <- doc %>% xml_find_first(xpath) %>% xml_integer()
hits
library(sf)
url$query <- list(service = "wfs",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "woonplaats='Hoek van Holland'",
outputFormat = "application/json",
resultType = "results",
count = maxRecordCount,
sortBy = "bag:identificatie")
requestAdresses <- function(x) {
url$query$startIndex <- x
request <- build_url(url)
st_read(request, stringsAsFactors = FALSE)
}
adresses <- lapply(seq(0, hits, maxRecordCount), requestAdresses()) %>% do.call(rbind, .)
?lapply
library(sf)
url$query <- list(service = "wfs",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "woonplaats='Hoek van Holland'",
outputFormat = "application/json",
resultType = "results",
count = maxRecordCount,
sortBy = "bag:identificatie")
requestAdresses <- function(x) {
url$query$startIndex <- x
request <- build_url(url)
st_read(request, stringsAsFactors = FALSE)
}
adresses <- lapply(seq(0, hits, maxRecordCount), requestAdresses) %>% do.call(rbind, .)
library(sf)
url$query <- list(service = "wfs",
version = "2.0.0",
request = "GetFeature",
typename = "bag:verblijfsobject",
cql_filter = "woonplaats='Hoek van Holland'",
outputFormat = "application/json",
resultType = "results",
count = maxRecordCount,
sortBy = "bag:identificatie")
requestAdresses <- function(x) {
url$query$startIndex <- x
request <- build_url(url)
st_read(request, stringsAsFactors = FALSE)
}
adresses <- lapply(seq(0, hits, maxRecordCount), requestAdresses) %>% do.call(rbind, .)
install.packages(ggplot)
install.packages("ggplot")
library(ggplot)
install.packages("ggmap")
library(ggmap)
result <- geocode("Jan Steenstraat 17 Groningen", output = "latlona", source = "google")
result
address
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(sf)
library(ggmap)
result <- geocode("Jan Steenstraat 17 Groningen", output = "latlona", source = "google")
result
lon <- as.numeric(result[1])
lat <- as.numeric(result[2])
address <- as.character(result[3])
lon
lat
address
library(sf)
point <- data.frame('lat' = lat,
'lon' = lon,
'id' = '1')
sf_point <- st_as_sf(point, coords = c("lon", "lat"), crs = 4326)
library(tmap)
tmap_mode('view')
tm_shape(sf_point) +  tm_dots(col = "black") +
tm_legend(show = FALSE) + tm_view(basemaps = 'OpenStreetMap')
?tm_symbols
tm_shape(sf_point) +  tm_markers() +
tm_legend(show = FALSE) + tm_view(basemaps = 'OpenStreetMap')
install.packages("nominatim")
